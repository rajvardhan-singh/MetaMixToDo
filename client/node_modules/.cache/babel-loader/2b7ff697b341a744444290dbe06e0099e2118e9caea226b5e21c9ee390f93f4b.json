{"ast":null,"code":"import React from 'react';\nconst taskReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [{\n    taskname: \"dreink\",\n    to: \"Raj\",\n    by: \"Pranav\",\n    status: \"pending\"\n  }, {\n    taskname: \"eatk\",\n    to: \"Raj\",\n    by: \"Pranav\",\n    status: \"done\"\n  }, {\n    taskname: \"lunch\",\n    to: \"Raj\",\n    by: \"Pranav\",\n    status: \"active\"\n  }];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    //adding new task to task redux store\n    case \"ADD_TASK\":\n      return [...state, {\n        taskname: action.payLoad.taskname,\n        to: action.payLoad.to,\n        by: action.payLoad.by,\n        date: action.payLoad.date,\n        status: 'pending'\n      }];\n    case \"LOG_IN\":\n      return action.payLoad;\n    case \"DATE_TASK\":\n      return action.payLoad;\n    case \"CHANGE_TO_ACTIVE\":\n      state = state.map(function (s) {\n        if (s.taskname === action.payload) s.status = 'active';\n        return s;\n      });\n      return state;\n    case \"CHANGE_TO_PENDING\":\n      state = state.map(function (s) {\n        if (s.taskname === action.payload) s.status = 'pending';\n        return s;\n      });\n      return state;\n    case \"CHANGE_TO_DONE\":\n      state = state.map(function (s) {\n        if (s.taskname === action.payload) s.status = 'done';\n        return s;\n      });\n      return state;\n    default:\n      return state;\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["React","taskReducer","state","taskname","to","by","status","action","type","payLoad","date","map","s","payload"],"sources":["C:/Users/Rajvardhan/Desktop/MetaMixToDo/client/src/redux/reducers/taskReducer.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst taskReducer = (state=[\r\n        {\r\n            taskname:\"dreink\",\r\n            to:\"Raj\",\r\n            by:\"Pranav\",\r\n            status:\"pending\"\r\n        \r\n        },{\r\n            taskname:\"eatk\",\r\n            to:\"Raj\",\r\n            by:\"Pranav\",\r\n            status:\"done\"\r\n        \r\n        },{\r\n            taskname:\"lunch\",\r\n            to:\"Raj\",\r\n            by:\"Pranav\",\r\n            status:\"active\"\r\n        \r\n        }\r\n        ],action) => {\r\n    switch (action.type) {\r\n\r\n\r\n        //adding new task to task redux store\r\n        case \"ADD_TASK\":\r\n            return [...state,\r\n                    {\r\n                        taskname:action.payLoad.taskname,\r\n                        to:action.payLoad.to,\r\n                        by:action.payLoad.by,\r\n                        date:action.payLoad.date,\r\n                        status:'pending'\r\n                    }\r\n                ];\r\n            \r\n        \r\n        case \"LOG_IN\":\r\n            return action.payLoad\r\n        \r\n        case \"DATE_TASK\":\r\n            return action.payLoad\r\n\r\n        case \"CHANGE_TO_ACTIVE\":\r\n            state = state.map(function(s){\r\n                if(s.taskname===action.payload) s.status='active'\r\n                return s\r\n            })\r\n            return state\r\n        case \"CHANGE_TO_PENDING\":\r\n            state = state.map(function(s){\r\n                if(s.taskname===action.payload) s.status='pending'\r\n                return s\r\n            })\r\n             return state\r\n        case \"CHANGE_TO_DONE\":\r\n            state = state.map(function(s){\r\n                if(s.taskname===action.payload) s.status='done'\r\n                 return s\r\n            })\r\n            return state\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default taskReducer;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAG,YAoBC;EAAA,IApBAC,KAAK,uEAAC,CACnB;IACIC,QAAQ,EAAC,QAAQ;IACjBC,EAAE,EAAC,KAAK;IACRC,EAAE,EAAC,QAAQ;IACXC,MAAM,EAAC;EAEX,CAAC,EAAC;IACEH,QAAQ,EAAC,MAAM;IACfC,EAAE,EAAC,KAAK;IACRC,EAAE,EAAC,QAAQ;IACXC,MAAM,EAAC;EAEX,CAAC,EAAC;IACEH,QAAQ,EAAC,OAAO;IAChBC,EAAE,EAAC,KAAK;IACRC,EAAE,EAAC,QAAQ;IACXC,MAAM,EAAC;EAEX,CAAC,CACA;EAAA,IAACC,MAAM;EACZ,QAAQA,MAAM,CAACC,IAAI;IAGf;IACA,KAAK,UAAU;MACX,OAAO,CAAC,GAAGN,KAAK,EACR;QACIC,QAAQ,EAACI,MAAM,CAACE,OAAO,CAACN,QAAQ;QAChCC,EAAE,EAACG,MAAM,CAACE,OAAO,CAACL,EAAE;QACpBC,EAAE,EAACE,MAAM,CAACE,OAAO,CAACJ,EAAE;QACpBK,IAAI,EAACH,MAAM,CAACE,OAAO,CAACC,IAAI;QACxBJ,MAAM,EAAC;MACX,CAAC,CACJ;IAGT,KAAK,QAAQ;MACT,OAAOC,MAAM,CAACE,OAAO;IAEzB,KAAK,WAAW;MACZ,OAAOF,MAAM,CAACE,OAAO;IAEzB,KAAK,kBAAkB;MACnBP,KAAK,GAAGA,KAAK,CAACS,GAAG,CAAC,UAASC,CAAC,EAAC;QACzB,IAAGA,CAAC,CAACT,QAAQ,KAAGI,MAAM,CAACM,OAAO,EAAED,CAAC,CAACN,MAAM,GAAC,QAAQ;QACjD,OAAOM,CAAC;MACZ,CAAC,CAAC;MACF,OAAOV,KAAK;IAChB,KAAK,mBAAmB;MACpBA,KAAK,GAAGA,KAAK,CAACS,GAAG,CAAC,UAASC,CAAC,EAAC;QACzB,IAAGA,CAAC,CAACT,QAAQ,KAAGI,MAAM,CAACM,OAAO,EAAED,CAAC,CAACN,MAAM,GAAC,SAAS;QAClD,OAAOM,CAAC;MACZ,CAAC,CAAC;MACD,OAAOV,KAAK;IACjB,KAAK,gBAAgB;MACjBA,KAAK,GAAGA,KAAK,CAACS,GAAG,CAAC,UAASC,CAAC,EAAC;QACzB,IAAGA,CAAC,CAACT,QAAQ,KAAGI,MAAM,CAACM,OAAO,EAAED,CAAC,CAACN,MAAM,GAAC,MAAM;QAC9C,OAAOM,CAAC;MACb,CAAC,CAAC;MACF,OAAOV,KAAK;IAEhB;MACI,OAAOA,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}