{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajvardhan\\\\Desktop\\\\MetaMixToDo\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { addTask } from '../redux/actions';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  //state declaration\n  const [flag, setFlag] = useState(false);\n  const [taskname, setTaskname] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const assignUser = to;\n  const date = useSelector(state => state.user.date);\n  const by = useSelector(state => state.user.user);\n  const dispatch = useDispatch();\n\n  //on task input chnage\n  const onTasknameChange = event => {\n    setTaskname(event.target.value);\n  };\n\n  //on For Me button Click\n  // const onForMeButton=()=>{\n  //   setUserto(currentUser)\n  //   submitTask()\n  // }\n\n  //on For other button\n  const onForOtherButton = () => {\n    setFlag(state => !state);\n  };\n\n  //on username input chnage\n  const onUsernameChange = event => {\n    setTo(event.target.value);\n  };\n\n  //on Save Button\n  const onSaveButton = event => {\n    submitTask();\n  };\n\n  //on Form submit\n  const submitTask = event => {\n    //Api call\n    event.preventDefault();\n    dispatch(addTask({\n      taskname: taskname,\n      by: by,\n      to: !flag ? by : assignUser,\n      date: date,\n      status: \"pending\"\n    }));\n\n    //setting user and taskname to default again\n    //setTo(\"\")\n    //setTaskname(\"\")\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitTask,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: onTasknameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"For Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onForOtherButton,\n      children: \"For Other\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), flag && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: onUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSaveButton,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"x6HiyrlEzSpViwRJHhqj0xfnREE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useSelector","addTask","useDispatch","TaskForm","flag","setFlag","taskname","setTaskname","to","setTo","assignUser","date","state","user","by","dispatch","onTasknameChange","event","target","value","onForOtherButton","onUsernameChange","onSaveButton","submitTask","preventDefault","status"],"sources":["C:/Users/Rajvardhan/Desktop/MetaMixToDo/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport { addTask } from '../redux/actions'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nconst TaskForm = () => {\r\n   \r\n  //state declaration\r\n  const [flag,setFlag] = useState(false)\r\n  const [taskname,setTaskname]= useState(\"\")\r\n  const [to,setTo] = useState(\"\")\r\n  const assignUser = to\r\n\r\n  const date = useSelector(state=>state.user.date)\r\n  const by = useSelector(state=>state.user.user)\r\n   \r\n  \r\n  const dispatch =useDispatch()\r\n\r\n  //on task input chnage\r\n  const onTasknameChange=(event)=>{\r\n    setTaskname(event.target.value)\r\n  }\r\n  \r\n  //on For Me button Click\r\n  // const onForMeButton=()=>{\r\n  //   setUserto(currentUser)\r\n  //   submitTask()\r\n  // }\r\n\r\n  //on For other button\r\n  const onForOtherButton=()=>{\r\n    setFlag(state=>!state)\r\n  }\r\n\r\n   //on username input chnage\r\n   const onUsernameChange=(event)=>{\r\n    setTo(event.target.value)\r\n  }\r\n\r\n  //on Save Button\r\n  const onSaveButton=(event)=>{\r\n    submitTask()\r\n  }\r\n\r\n  //on Form submit\r\n  const submitTask=(event)=>{\r\n    //Api call\r\n    event.preventDefault()\r\n\r\n    dispatch(addTask(\r\n      { taskname:taskname,\r\n        by:by,\r\n        to:!flag?by:assignUser,\r\n        date:date ,\r\n        status:\"pending\" \r\n      }))\r\n    \r\n      //setting user and taskname to default again\r\n    //setTo(\"\")\r\n    //setTaskname(\"\")\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <form onSubmit={submitTask}>\r\n      <input type='text' onChange={onTasknameChange} />\r\n      <button type=\"submit\">For Me</button>\r\n      <button onClick={onForOtherButton}>For Other</button>\r\n\r\n      \r\n      {flag &&\r\n        <> \r\n          <input type='text' onChange={onUsernameChange}/>\r\n          <button type='button' onClick={onSaveButton}>Save</button>\r\n        </>\r\n}\r\n      \r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,WAAW,QAAO,aAAa;AACvC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAAQC,WAAW,QAAO,aAAa;AAAA;AAAA;AAEvC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAErB;EACA,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACtC,MAAM,CAACO,QAAQ,EAACC,WAAW,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,EAAE,EAACC,KAAK,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC/B,MAAMW,UAAU,GAAGF,EAAE;EAErB,MAAMG,IAAI,GAAGX,WAAW,CAACY,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;EAChD,MAAMG,EAAE,GAAGd,WAAW,CAACY,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACA,IAAI,CAAC;EAG9C,MAAME,QAAQ,GAAEb,WAAW,EAAE;;EAE7B;EACA,MAAMc,gBAAgB,GAAEC,KAAK,IAAG;IAC9BV,WAAW,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMC,gBAAgB,GAAC,MAAI;IACzBf,OAAO,CAACO,KAAK,IAAE,CAACA,KAAK,CAAC;EACxB,CAAC;;EAEA;EACA,MAAMS,gBAAgB,GAAEJ,KAAK,IAAG;IAC/BR,KAAK,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMG,YAAY,GAAEL,KAAK,IAAG;IAC1BM,UAAU,EAAE;EACd,CAAC;;EAED;EACA,MAAMA,UAAU,GAAEN,KAAK,IAAG;IACxB;IACAA,KAAK,CAACO,cAAc,EAAE;IAEtBT,QAAQ,CAACd,OAAO,CACd;MAAEK,QAAQ,EAACA,QAAQ;MACjBQ,EAAE,EAACA,EAAE;MACLN,EAAE,EAAC,CAACJ,IAAI,GAACU,EAAE,GAACJ,UAAU;MACtBC,IAAI,EAACA,IAAI;MACTc,MAAM,EAAC;IACT,CAAC,CAAC,CAAC;;IAEH;IACF;IACA;EACF,CAAC;;EAGD,oBAEE;IAAM,QAAQ,EAAEF,UAAW;IAAA,wBACzB;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEP;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eACjD;MAAQ,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eACrC;MAAQ,OAAO,EAAEI,gBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,EAGpDhB,IAAI,iBACH;MAAA,wBACE;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEiB;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAE,eAChD;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEC,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA,gBACzD;EAAA;IAAA;IAAA;IAAA;EAAA,QAGA;AAGX,CAAC;AAAA,GA7EKnB,QAAQ;EAAA,QAQCH,WAAW,EACbA,WAAW,EAGNE,WAAW;AAAA;AAAA,KAZvBC,QAAQ;AA+Ed,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}