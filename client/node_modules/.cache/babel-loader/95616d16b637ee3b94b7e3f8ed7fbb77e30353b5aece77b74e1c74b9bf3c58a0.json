{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajvardhan\\\\Desktop\\\\MetaMixToDo\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { addTask } from '../redux/actions';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  //state declaration\n  const [flag, setFlag] = useState(false);\n  const [taskname, setTaskname] = useState(\"Enter Task\");\n  const [userTo, setUserto] = useState(\"Enter User\");\n  const date = useSelector(state => state.user.date);\n  const userBy = useSelector(state => state.user.username);\n  const dispatch = useDispatch();\n\n  //on task input chnage\n  const onTasknameChange = event => {\n    setTaskname(event.target.value);\n  };\n\n  //on For Me button Click\n  const onForMeButton = () => {\n    _s();\n    setUserto(useSelector(state => state.user.username));\n    submitTask();\n  };\n\n  //on For other button\n  _s(onForMeButton, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n    return [useSelector];\n  });\n  const onForOtherButton = () => {\n    setFlag(state => !state);\n  };\n\n  //on username input chnage\n  const onUsernameChange = event => {\n    setUserto(event.target.value);\n  };\n\n  //on Save Button\n  const onSaveButton = event => {\n    submitTask();\n  };\n\n  //on Form submit\n  const submitTask = event => {\n    //Api call\n    event.preventDefault();\n    dispatch(addTask({\n      taskname: taskname,\n      userBy: userBy,\n      userTo: userTo,\n      date: date\n    }));\n\n    //setting user and taskname to default again\n    setUserto(\"\");\n    setTaskname(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitTask,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: onTasknameChange,\n      value: taskname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onForMeButton,\n      children: \"For Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onForOtherButton,\n      children: \"For Other\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), \"/*if task for other user render this*/\", flag && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: onUsernameChange,\n        value: userTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSaveButton,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(TaskForm, \"5JcMUKHRsL8QotUy+DHXKzc/mM8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useSelector","addTask","useDispatch","TaskForm","flag","setFlag","taskname","setTaskname","userTo","setUserto","date","state","user","userBy","username","dispatch","onTasknameChange","event","target","value","onForMeButton","submitTask","onForOtherButton","onUsernameChange","onSaveButton","preventDefault"],"sources":["C:/Users/Rajvardhan/Desktop/MetaMixToDo/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport { addTask } from '../redux/actions'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nconst TaskForm = () => {\r\n   \r\n  //state declaration\r\n  const [flag,setFlag] = useState(false)\r\n  const [taskname,setTaskname]= useState(\"Enter Task\")\r\n  const [userTo,setUserto] = useState(\"Enter User\")\r\n  const date = useSelector(state=>state.user.date)\r\n  const userBy = useSelector(state=>state.user.username)\r\n  \r\n  const dispatch =useDispatch()\r\n\r\n  //on task input chnage\r\n  const onTasknameChange=(event)=>{\r\n    setTaskname(event.target.value)\r\n  }\r\n  \r\n  //on For Me button Click\r\n  const onForMeButton=()=>{\r\n    setUserto(useSelector(state=>state.user.username))\r\n    submitTask()\r\n  }\r\n\r\n  //on For other button\r\n  const onForOtherButton=()=>{\r\n    setFlag(state=>!state)\r\n  }\r\n\r\n   //on username input chnage\r\n   const onUsernameChange=(event)=>{\r\n    setUserto(event.target.value)\r\n  }\r\n\r\n  //on Save Button\r\n  const onSaveButton=(event)=>{\r\n    submitTask()\r\n  }\r\n\r\n  //on Form submit\r\n  const submitTask=(event)=>{\r\n    //Api call\r\n    event.preventDefault()\r\n\r\n    dispatch(addTask(\r\n      { taskname:taskname,\r\n        userBy:userBy,\r\n        userTo:userTo,\r\n        date:date  \r\n      }))\r\n    \r\n      //setting user and taskname to default again\r\n    setUserto(\"\")\r\n    setTaskname(\"\")\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <form onSubmit={submitTask}>\r\n      <input type='text' onChange={onTasknameChange} value={taskname}/>\r\n      <button onClick={onForMeButton}>For Me</button>\r\n      <button onClick={onForOtherButton}>For Other</button>\r\n\r\n      /*if task for other user render this*/\r\n      {flag &&\r\n        <> \r\n          <input type='text' onChange={onUsernameChange} value={userTo}/>\r\n          <button onClick={onSaveButton}>Save</button>\r\n        </>\r\n      }\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,WAAW,QAAO,aAAa;AACvC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAAQC,WAAW,QAAO,aAAa;AAAA;AAAA;AAEvC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAAA;EAErB;EACA,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACtC,MAAM,CAACO,QAAQ,EAACC,WAAW,CAAC,GAAER,QAAQ,CAAC,YAAY,CAAC;EACpD,MAAM,CAACS,MAAM,EAACC,SAAS,CAAC,GAAGV,QAAQ,CAAC,YAAY,CAAC;EACjD,MAAMW,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;EAChD,MAAMG,MAAM,GAAGb,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACE,QAAQ,CAAC;EAEtD,MAAMC,QAAQ,GAAEb,WAAW,EAAE;;EAE7B;EACA,MAAMc,gBAAgB,GAAEC,KAAK,IAAG;IAC9BV,WAAW,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,aAAa,GAAC,MAAI;IAAA;IACtBX,SAAS,CAACT,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACE,QAAQ,CAAC,CAAC;IAClDO,UAAU,EAAE;EACd,CAAC;;EAED;EAAA,GALMD,aAAa;IAAA,QACPpB,WAAW;EAAA;EAKvB,MAAMsB,gBAAgB,GAAC,MAAI;IACzBjB,OAAO,CAACM,KAAK,IAAE,CAACA,KAAK,CAAC;EACxB,CAAC;;EAEA;EACA,MAAMY,gBAAgB,GAAEN,KAAK,IAAG;IAC/BR,SAAS,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMK,YAAY,GAAEP,KAAK,IAAG;IAC1BI,UAAU,EAAE;EACd,CAAC;;EAED;EACA,MAAMA,UAAU,GAAEJ,KAAK,IAAG;IACxB;IACAA,KAAK,CAACQ,cAAc,EAAE;IAEtBV,QAAQ,CAACd,OAAO,CACd;MAAEK,QAAQ,EAACA,QAAQ;MACjBO,MAAM,EAACA,MAAM;MACbL,MAAM,EAACA,MAAM;MACbE,IAAI,EAACA;IACP,CAAC,CAAC,CAAC;;IAEH;IACFD,SAAS,CAAC,EAAE,CAAC;IACbF,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAGD,oBAEE;IAAM,QAAQ,EAAEc,UAAW;IAAA,wBACzB;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEL,gBAAiB;MAAC,KAAK,EAAEV;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,eACjE;MAAQ,OAAO,EAAEc,aAAc;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAC/C;MAAQ,OAAO,EAAEE,gBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,4CAGpDlB,IAAI,iBACH;MAAA,wBACE;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEmB,gBAAiB;QAAC,KAAK,EAAEf;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eAC/D;QAAQ,OAAO,EAAEgB,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA,gBAC3C;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAGX,CAAC;AAAA,IAxEKrB,QAAQ;EAAA,QAMCH,WAAW,EACTA,WAAW,EAEVE,WAAW;AAAA;AAAA,KATvBC,QAAQ;AA0Ed,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}