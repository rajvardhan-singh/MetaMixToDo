{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajvardhan\\\\Desktop\\\\MetaMixToDo\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { addTask } from '../redux/actions';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  //state declaration\n  const [flag, setFlag] = useState(false);\n  const [taskname, setTaskname] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const date = useSelector(state => state.user.date);\n  const user = useSelector(state => state.user.user);\n  const dispatch = useDispatch();\n\n  //on task input chnage\n  const onTasknameChange = event => {\n    setTaskname(event.target.value);\n  };\n\n  //on ForMebutton Click\n  const onForMeHandler = event => {\n    setTo(user);\n    submitTask(event);\n  };\n\n  //on For other button\n  const onForOtherButton = () => {\n    setFlag(state => !state);\n  };\n\n  //on username input chnage\n  const onUsernameChange = event => {\n    setTo(event.target.value);\n  };\n\n  //on Form submit\n  const submitTask = event => {\n    //Api call\n    event.preventDefault();\n    dispatch(addTask({\n      taskname: taskname,\n      by: user,\n      to: to,\n      date: date,\n      status: \"pending\"\n    }));\n\n    //setting user and taskname to default again\n    setTo(\"\");\n    setTaskname(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitTask,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: onTasknameChange,\n      placeholder: \"Add Task\",\n      value: taskname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onForMeHandler,\n      children: \"For Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onForOtherButton,\n      children: \"For Other\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), flag && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: onUsernameChange,\n        placeholder: \"User Name\",\n        value: to\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"1vRkyYw3G48AQymvZmt+dFo4bgU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useSelector","addTask","useDispatch","TaskForm","flag","setFlag","taskname","setTaskname","to","setTo","date","state","user","dispatch","onTasknameChange","event","target","value","onForMeHandler","submitTask","onForOtherButton","onUsernameChange","preventDefault","by","status"],"sources":["C:/Users/Rajvardhan/Desktop/MetaMixToDo/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport { addTask } from '../redux/actions'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nconst TaskForm = () => {\r\n   \r\n  //state declaration\r\n  const [flag,setFlag] = useState(false)\r\n  const [taskname,setTaskname]= useState(\"\")\r\n  const [to,setTo] = useState(\"\")\r\n\r\n\r\n  const date = useSelector(state=>state.user.date)\r\n  const user = useSelector(state=>state.user.user)\r\n   \r\n  \r\n  const dispatch =useDispatch()\r\n\r\n  //on task input chnage\r\n  const onTasknameChange=(event)=>{\r\n    setTaskname(event.target.value)\r\n  }\r\n  \r\n  //on ForMebutton Click\r\n  const onForMeHandler=(event)=>{\r\n    setTo(user)\r\n    submitTask(event)\r\n  }\r\n\r\n  //on For other button\r\n  const onForOtherButton=()=>{\r\n    setFlag(state=>!state)\r\n  }\r\n\r\n   //on username input chnage\r\n   const onUsernameChange=(event)=>{\r\n    setTo(event.target.value)\r\n  }\r\n\r\n  \r\n  //on Form submit\r\n  const submitTask=(event)=>{\r\n    //Api call\r\n    event.preventDefault()\r\n\r\n    dispatch(addTask(\r\n      { taskname:taskname,\r\n        by:user,\r\n        to:to,\r\n        date:date ,\r\n        status:\"pending\" \r\n      }))\r\n    \r\n      //setting user and taskname to default again\r\n    setTo(\"\")\r\n    setTaskname(\"\")\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <form onSubmit={submitTask}>\r\n      <input type='text' onChange={onTasknameChange} placeholder=\"Add Task\" value={taskname}/>\r\n      <button type=\"button\" onClick={onForMeHandler}>For Me</button>\r\n      <button type=\"button\" onClick={onForOtherButton}>For Other</button>\r\n\r\n      \r\n      {flag &&\r\n        <> \r\n          <input type='text' onChange={onUsernameChange} placeholder=\"User Name\" value={to}/>\r\n          <button type ='submit'>Save</button>\r\n        </>\r\n      }  \r\n      \r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,WAAW,QAAO,aAAa;AACvC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAAQC,WAAW,QAAO,aAAa;AAAA;AAAA;AAEvC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAErB;EACA,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACtC,MAAM,CAACO,QAAQ,EAACC,WAAW,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,EAAE,EAACC,KAAK,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAG/B,MAAMW,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;EAChD,MAAME,IAAI,GAAGZ,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACA,IAAI,CAAC;EAGhD,MAAMC,QAAQ,GAAEX,WAAW,EAAE;;EAE7B;EACA,MAAMY,gBAAgB,GAAEC,KAAK,IAAG;IAC9BR,WAAW,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,cAAc,GAAEH,KAAK,IAAG;IAC5BN,KAAK,CAACG,IAAI,CAAC;IACXO,UAAU,CAACJ,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,MAAMK,gBAAgB,GAAC,MAAI;IACzBf,OAAO,CAACM,KAAK,IAAE,CAACA,KAAK,CAAC;EACxB,CAAC;;EAEA;EACA,MAAMU,gBAAgB,GAAEN,KAAK,IAAG;IAC/BN,KAAK,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;;EAGD;EACA,MAAME,UAAU,GAAEJ,KAAK,IAAG;IACxB;IACAA,KAAK,CAACO,cAAc,EAAE;IAEtBT,QAAQ,CAACZ,OAAO,CACd;MAAEK,QAAQ,EAACA,QAAQ;MACjBiB,EAAE,EAACX,IAAI;MACPJ,EAAE,EAACA,EAAE;MACLE,IAAI,EAACA,IAAI;MACTc,MAAM,EAAC;IACT,CAAC,CAAC,CAAC;;IAEH;IACFf,KAAK,CAAC,EAAE,CAAC;IACTF,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAGD,oBAEE;IAAM,QAAQ,EAAEY,UAAW;IAAA,wBACzB;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEL,gBAAiB;MAAC,WAAW,EAAC,UAAU;MAAC,KAAK,EAAER;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,eACxF;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAEY,cAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAC9D;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAEE,gBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,EAGlEhB,IAAI,iBACH;MAAA,wBACE;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEiB,gBAAiB;QAAC,WAAW,EAAC,WAAW;QAAC,KAAK,EAAEb;MAAG;QAAA;QAAA;QAAA;MAAA,QAAE,eACnF;QAAQ,IAAI,EAAE,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA,gBACnC;EAAA;IAAA;IAAA;IAAA;EAAA,QAGA;AAGX,CAAC;AAAA,GAzEKL,QAAQ;EAAA,QAQCH,WAAW,EACXA,WAAW,EAGRE,WAAW;AAAA;AAAA,KAZvBC,QAAQ;AA2Ed,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}