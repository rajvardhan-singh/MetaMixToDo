{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajvardhan\\\\Desktop\\\\MetaMixToDo\\\\client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTask, toActive, toDone, toPending } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = props => {\n  _s();\n  const task = useSelector(state => state.task);\n  const dispatch = useDispatch();\n\n  //decide which task to render \n  const getTodos = () => {\n    if (props.tab === 'active') {\n      return task.filter(todo => todo.status === 'active');\n    } else if (props.tab === 'pending') {\n      return task.filter(todo => todo.status === 'pending');\n    } else if (props.tab === 'done') {\n      return task.filter(todo => todo.status === 'done');\n    }\n  };\n  const changeToActive = taskname => {\n    dispatch(toActive(taskname));\n  };\n  const changeToPending = taskname => {\n    dispatch(toPending(taskname));\n  };\n  const changeToDone = taskname => {\n    dispatch(toDone(taskname));\n  };\n  const changeToDelete = taskname => {\n    dispatch(deleteTask(taskname));\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: getTodos.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.taskname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), props.flag && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.type == \"appoint\" ? task.to : task.by\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 28\n      }, this), task.status !== 'active' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeToActive(task.taskname),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 40\n      }, this), task.status !== 'pending' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeToPending(task.taskname),\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }, this), task.status !== 'done' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeToDone(task.taskname),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeToDelete(task.taskname),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"VhUokjA4Rc0dyV784s/SViNbQMc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useDispatch","useSelector","deleteTask","toActive","toDone","toPending","TaskList","props","task","state","dispatch","getTodos","tab","filter","todo","status","changeToActive","taskname","changeToPending","changeToDone","changeToDelete","map","flag","type","to","by"],"sources":["C:/Users/Rajvardhan/Desktop/MetaMixToDo/client/src/components/TaskList.js"],"sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteTask, toActive, toDone, toPending } from '../redux/actions'\r\n\r\nconst TaskList = (props) => {\r\n\r\n  const task = useSelector(state=>state.task)\r\n  const dispatch =useDispatch()\r\n\r\n  //decide which task to render \r\n  const getTodos = () => {\r\n    if (props.tab === 'active') {\r\n        return task.filter(todo=>todo.status==='active')\r\n    } else if (props.tab === 'pending') {\r\n        return task.filter(todo => todo.status==='pending')\r\n    } else if (props.tab === 'done') {\r\n        return task.filter(todo => todo.status==='done')\r\n    }\r\n  }\r\n\r\n  const changeToActive=(taskname)=>{\r\n      dispatch(toActive(taskname))\r\n  }\r\n\r\n  const changeToPending=(taskname)=>{\r\n      dispatch(toPending(taskname))\r\n  }\r\n  \r\n  const changeToDone=(taskname)=>{\r\n     dispatch(toDone(taskname))\r\n  }\r\n\r\n  const changeToDelete=(taskname)=>{\r\n      dispatch(deleteTask(taskname))\r\n  }\r\n\r\n  return (\r\n\r\n    <ul>\r\n      {getTodos.map(task=>(\r\n\r\n          <div>\r\n\r\n            <h3>{task.taskname}</h3>\r\n            {props.flag && <h3>{props.type==\"appoint\"?task.to:task.by}</h3>}\r\n\r\n            \r\n            {task.status!=='active' && <button onClick={changeToActive(task.taskname)}>Active</button>}\r\n            {task.status!=='pending' && <button onClick={changeToPending(task.taskname)}>Pending</button>}\r\n            {task.status!=='done' && <button onClick={changeToDone(task.taskname)}>Done</button>}\r\n             \r\n            <button onClick={changeToDelete(task.taskname)}>Delete</button>\r\n          </div>\r\n       ))\r\n\r\n      }\r\n    </ul>\r\n    \r\n  )\r\n}\r\n\r\nexport default TaskList"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;AAAA;AAE1E,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAE1B,MAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACD,IAAI,CAAC;EAC3C,MAAME,QAAQ,GAAEV,WAAW,EAAE;;EAE7B;EACA,MAAMW,QAAQ,GAAG,MAAM;IACrB,IAAIJ,KAAK,CAACK,GAAG,KAAK,QAAQ,EAAE;MACxB,OAAOJ,IAAI,CAACK,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACC,MAAM,KAAG,QAAQ,CAAC;IACpD,CAAC,MAAM,IAAIR,KAAK,CAACK,GAAG,KAAK,SAAS,EAAE;MAChC,OAAOJ,IAAI,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAG,SAAS,CAAC;IACvD,CAAC,MAAM,IAAIR,KAAK,CAACK,GAAG,KAAK,MAAM,EAAE;MAC7B,OAAOJ,IAAI,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAG,MAAM,CAAC;IACpD;EACF,CAAC;EAED,MAAMC,cAAc,GAAEC,QAAQ,IAAG;IAC7BP,QAAQ,CAACP,QAAQ,CAACc,QAAQ,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,eAAe,GAAED,QAAQ,IAAG;IAC9BP,QAAQ,CAACL,SAAS,CAACY,QAAQ,CAAC,CAAC;EACjC,CAAC;EAED,MAAME,YAAY,GAAEF,QAAQ,IAAG;IAC5BP,QAAQ,CAACN,MAAM,CAACa,QAAQ,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMG,cAAc,GAAEH,QAAQ,IAAG;IAC7BP,QAAQ,CAACR,UAAU,CAACe,QAAQ,CAAC,CAAC;EAClC,CAAC;EAED,oBAEE;IAAA,UACGN,QAAQ,CAACU,GAAG,CAACb,IAAI,iBAEd;MAAA,wBAEE;QAAA,UAAKA,IAAI,CAACS;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,EACvBV,KAAK,CAACe,IAAI,iBAAI;QAAA,UAAKf,KAAK,CAACgB,IAAI,IAAE,SAAS,GAACf,IAAI,CAACgB,EAAE,GAAChB,IAAI,CAACiB;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM,EAG9DjB,IAAI,CAACO,MAAM,KAAG,QAAQ,iBAAI;QAAQ,OAAO,EAAEC,cAAc,CAACR,IAAI,CAACS,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,EACzFT,IAAI,CAACO,MAAM,KAAG,SAAS,iBAAI;QAAQ,OAAO,EAAEG,eAAe,CAACV,IAAI,CAACS,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,EAC5FT,IAAI,CAACO,MAAM,KAAG,MAAM,iBAAI;QAAQ,OAAO,EAAEI,YAAY,CAACX,IAAI,CAACS,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eAEpF;QAAQ,OAAO,EAAEG,cAAc,CAACZ,IAAI,CAACS,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEnE;EAAC;IAAA;IAAA;IAAA;EAAA,QAGA;AAGT,CAAC;AAAA,GAvDKX,QAAQ;EAAA,QAECL,WAAW,EACRD,WAAW;AAAA;AAAA,KAHvBM,QAAQ;AAyDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}